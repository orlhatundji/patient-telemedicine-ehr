{"version":3,"file":"static/js/883.16e8c86e.chunk.js","mappings":"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","sources":["components/Progress.tsx","assets/icons/checkbox-active.svg","assets/icons/checkbox-inactive.svg","pages/Prescriptions.tsx"],"sourcesContent":["import React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { Tabs, Tab } from \"react-tabs-scrollable\";\nimport \"react-tabs-scrollable/dist/rts.css\";\n\ntype ProgressProps = {\n  step: number;\n  setStep: (step: number) => void;\n  options: string[];\n  centered?: boolean;\n};\n\nconst Progress: React.FC<ProgressProps> = ({\n  step,\n  setStep,\n  options,\n  centered,\n}) => {\n  return (\n    <div\n      className={twMerge(\n        \"relative w-full min-h-[52px] grid h-full bg-white\",\n        \"h-11 rounded10 translate-x-0 mt-8\"\n      )}\n      style={{\n        gridTemplateColumns: `repeat(${options.length}, minmax(0, 1fr))`,\n      }}\n    >\n      <div\n        className={twMerge(\n          \"absolute transition-transform duration-500 h-full bg-primary rounded10\"\n        )}\n        style={{\n          width: `${100 / options.length}%`,\n          transform: `translate(${100 * step}%)`,\n        }}\n      />\n      {options.map((option, i) => (\n        <div\n          key={option}\n          onClick={() => setStep(i)}\n          className={twMerge(\n            \"h-full flex items-center gap-x-2 px-4 py-3\",\n            \"cursor-pointer rounded10 transition-all duration-1000\",\n            step === i ? \"bg-primary/50\" : \"bg-white\"\n          )}\n        >\n          <span\n            className={twMerge(\n              \"z-10\",\n              step === i ? \"text-white\" : \"\",\n              \"header2\",\n              centered ? \" mx-auto\" : \"\"\n            )}\n          >\n            {option}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport const ProgressA: React.FC<ProgressProps> = ({\n  step,\n  setStep,\n  options,\n}) => {\n  return (\n    <div\n      className={twMerge(\n        \"relative w-full min-h-[52px] grid h-full bg-white\",\n        \"h-11 translate-x-0 mt-8\"\n      )}\n      style={{\n        gridTemplateColumns: `repeat(${options.length}, minmax(0, 1fr))`,\n      }}\n    >\n      <div\n        className={twMerge(\n          \"absolute transition-transform duration-500 h-full border-b-2 border-tertiary-100\"\n        )}\n        style={{\n          width: `${100 / options.length}%`,\n          transform: `translate(${100 * step}%)`,\n        }}\n      />\n      {options.map((option, i) => (\n        <div\n          key={option}\n          onClick={() => setStep(i)}\n          className={twMerge(\n            \"h-full flex items-center gap-x-2 px-4 py-3\",\n            \"cursor-pointer transition-all duration-1000\"\n          )}\n        >\n          <span\n            className={twMerge(\n              \"z-10\",\n              step === i ? \"\" : \"text-grey-200\",\n              \"header2 text-base\"\n            )}\n          >\n            {option}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport const ProgressB: React.FC<ProgressProps> = ({\n  step: activeTab,\n  setStep: setActiveTab,\n  options,\n}) => {\n\n  const onTabClick = (e: any, index: number) => {\n    setActiveTab(index);\n  };\n\n  return (\n    <>\n      <Tabs\n        activeTab={activeTab}\n        onTabClick={onTabClick}\n        mode=\"scrollSelectedToCenterFromView\"\n        tabsContainerClassName=\"\"\n      >\n        {options.map((item, index) => (\n          <Tab\n            key={item}\n            className=\"p-0\"\n            style={{\n              color: activeTab === index ? \"#FA5805\" : \"#ACACAC\",\n              background: \"transparent\",\n              borderRadius: \"0\",\n              borderTop: \"none\",\n              borderLeft: \"none\",\n              borderRight: \"none\",\n              borderBottom: activeTab === index ? \"solid 2px #FA5805\" : \"none\",\n              padding: \".5rem .5REM\",\n              boxShadow: \"none\",\n              fontWeight: \"600\",\n            }}\n          >\n            {item}\n          </Tab>\n        ))}\n      </Tabs>\n    </>\n  );\n};\n\nexport default Progress;\n","var _rect, _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCheckboxActive(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 11,\n    width: 18,\n    height: 18,\n    rx: 2,\n    fill: \"#FA5805\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 24.4L14 20.4L15.4 19L18 21.6L24.6 15L26 16.4L18 24.4Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckboxActive);\nexport default __webpack_public_path__ + \"static/media/checkbox-active.cdcd5de18de9db728155a53ddb28ed12.svg\";\nexport { ForwardRef as ReactComponent };","var _rect;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCheckboxInactive(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 16,\n    height: 16,\n    rx: 1,\n    stroke: \"#49454F\",\n    strokeWidth: 2\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckboxInactive);\nexport default __webpack_public_path__ + \"static/media/checkbox-inactive.43b3fd08492c7cee80681d8a7c25f04c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\n\n// Components\nimport BottomNav from \"../components/BottomNav\";\nimport Progress from \"../components/Progress\";\n\n// Assets\nimport { ReactComponent as CheckboxActive } from \"../assets/icons/checkbox-active.svg\";\nimport { ReactComponent as CheckboxInactive } from \"../assets/icons/checkbox-inactive.svg\";\n\n\nconst Prescriptions = () => {\n  const [step, setStep] = useState(0);\n  const [medications, setMedication] = useState([\n    {\n      id: \"1\",\n      name: \"Paracetamol\",\n      dosage: \"500mg\",\n      frequency: \"Twice daily\",\n      duration: \"5 days\",\n      instructions: \"Take after meal\",\n      completed: true,\n    },\n    {\n      id: \"2\",\n      name: \"Amoxicillin\",\n      dosage: \"500mg\",\n      frequency: \"Twice daily\",\n      duration: \"5 days\",\n      instructions: \"Take after meal\",\n      completed: true,\n    },\n    {\n      id: \"3\",\n      name: \"Paracetamol\",\n      dosage: \"500mg\",\n      frequency: \"Twice daily\",\n      duration: \"5 days\",\n      instructions: \"Take after meal\",\n      completed: true,\n    },\n    {\n      id: \"4\",\n      name: \"Paracetamol\",\n      dosage: \"500mg\",\n      frequency: \"Twice daily\",\n      duration: \"5 days\",\n      instructions: \"Take after meal\",\n      completed: false,\n    },\n    {\n      id: \"5\",\n      name: \"Paracetamol\",\n      dosage: \"500mg\",\n      frequency: \"Twice daily\",\n      duration: \"5 days\",\n      instructions: \"Take after meal\",\n      completed: false,\n    },\n    {\n      id: \"6\",\n      name: \"Paracetamol\",\n      dosage: \"500mg\",\n      frequency: \"Twice daily\",\n      duration: \"5 days\",\n      instructions: \"Take after meal\",\n      completed: false,\n    },\n  ]);\n\n  const markAsComplete = (id: string) => {\n    const newMedications = [...medications];\n    const index = newMedications.findIndex((item) => item.id === id); \n    newMedications[index].completed = true;\n    setMedication(newMedications);\n  }\n  \n\n  return (\n    <div className=\"px-6 top-padding bottom-nav-padding\">\n      <h1 className=\"header1\">Prescriptions</h1>\n      <p className=\"max-w-[262px] text-sm leading-[1.065rem] mt-2\">\n        Here are your drug prescription from your doctor\n      </p>\n      <Progress\n        centered\n        {...{ step, setStep }}\n        options={[\"Current\", \"Completed\"]}\n      />\n\n      <div className=\"flex flex-col gap-y-6 mt-8\">\n        {medications.filter((item) => item.completed === Boolean(step)).map((medication) => (\n          <div className=\"flex items-center justify-between\">\n            <div className=\"\">\n              <div className=\"flex gap-x-2\">\n                <span className=\"\">{medication.name}</span>\n                <span className=\"font-semibold\">{medication.dosage}</span>\n              </div>\n              <div className=\"flex gap-x-1 text-grey-100 text-sm\">\n                <span className=\"\">{medication.frequency}</span> for\n                <span className=\"\">{medication.dosage}</span>\n              </div>\n              <p className=\"text-grey-100 text-sm\">{medication.instructions}</p>\n              <hr className=\"mt-2\" />\n            </div>\n            {medication.completed ? (\n              <CheckboxActive />\n            ) : (\n              <CheckboxInactive className=\"mr-3\" \n              onClick={() => markAsComplete(medication.id)}\n\n               />\n            )}\n          </div>\n        ))}\n      </div>\n      <BottomNav />\n    </div>\n  );\n};\n\nexport default Prescriptions;\n"],"names":["ProgressA","_ref2","step","setStep","options","_jsxs","className","twMerge","style","gridTemplateColumns","concat","length","children","_jsx","width","transform","map","option","i","onClick","ProgressB","_ref3","activeTab","setActiveTab","_Fragment","Tabs","onTabClick","e","index","mode","tabsContainerClassName","item","Tab","color","background","borderRadius","borderTop","borderLeft","borderRight","borderBottom","padding","boxShadow","fontWeight","_ref","centered","_rect","_path","_extends","Object","assign","bind","n","arguments","t","r","hasOwnProperty","call","apply","SvgCheckboxActive","svgRef","title","titleId","props","height","viewBox","fill","xmlns","ref","id","x","y","rx","d","ForwardRef","SvgCheckboxInactive","stroke","strokeWidth","Prescriptions","useState","medications","setMedication","name","dosage","frequency","duration","instructions","completed","Progress","filter","Boolean","medication","CheckboxActive","CheckboxInactive","newMedications","findIndex","markAsComplete","BottomNav"],"sourceRoot":""}