{"version":3,"file":"static/js/188.0788c683.chunk.js","mappings":"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","sources":["components/Progress.tsx","components/Reviews.tsx","pages/DoctorDetail.tsx"],"sourcesContent":["import React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\ntype ProgressProps = {\n  step: number;\n  setStep: (step: number) => void;\n  options: string[];\n};\n\nconst Progress: React.FC<ProgressProps> = ({ step, setStep, options }) => {\n  return (\n    <div\n      className={twMerge(\n        \"relative w-full min-h-[52px] grid h-full bg-white\",\n        \"h-11 rounded10 translate-x-0 mt-8\"\n      )}\n      style={{\n        gridTemplateColumns: `repeat(${options.length}, minmax(0, 1fr))`,\n      }}\n    >\n      <div\n        className={twMerge(\n          \"absolute transition-transform duration-500 h-full bg-primary rounded10\"\n        )}\n        style={{\n          width: `${100 / options.length}%`,\n          transform: `translate(${100 * step}%)`,\n        }}\n      />\n      {options.map((option, i) => (\n        <div\n          key={option}\n          onClick={() => setStep(i)}\n          className={twMerge(\n            \"h-full flex items-center gap-x-2 px-4 py-3\",\n            \"cursor-pointer rounded10 transition-all duration-1000\",\n            step === i ? \"bg-primary/50\" : \"bg-white\"\n          )}\n        >\n          <span className={twMerge(\"z-10\", step === i ? \"text-white\" : \"\", \"header2\")}>\n            {option}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport const ProgressA: React.FC<ProgressProps> = ({ step, setStep, options }) => {\n  return (\n    <div\n      className={twMerge(\n        \"relative w-full min-h-[52px] grid h-full bg-white\",\n        \"h-11 translate-x-0 mt-8\"\n      )}\n      style={{\n        gridTemplateColumns: `repeat(${options.length}, minmax(0, 1fr))`,\n      }}\n    >\n      <div\n        className={twMerge(\n          \"absolute transition-transform duration-500 h-full border-b-2 border-tertiary-100\",\n        )}\n        style={{\n          width: `${100 / options.length}%`,\n          transform: `translate(${100 * step}%)`,\n        }}\n      />\n      {options.map((option, i) => (\n        <div\n          key={option}\n          onClick={() => setStep(i)}\n          className={twMerge(\n            \"h-full flex items-center gap-x-2 px-4 py-3\",\n            \"cursor-pointer transition-all duration-1000\",\n          \n          )}\n        >\n          <span className={twMerge(\"z-10\", step === i ? \"\" : \"text-grey-200\", \"header2 text-base\")}>\n            {option}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Progress;\n","import React from \"react\";\n\n// Assets\nimport person from \"../assets/images/person.png\";\nimport DateView from \"./DateView\";\n\ntype ReviewProps = {\n  name: string;\n  review: string;\n  date: string;\n  occupation?: string;\n};\n\nconst Review: React.FC<ReviewProps> = ({\n  name,\n  date,\n  review,\n  occupation\n}) => {\n  const [stringEnd, setStringEnd] = React.useState(200);\n  return (\n    <div className=\"flex gap-4\">\n      <div>\n        <span className=\"header2\">\n          <DateView date={date} />\n        </span>\n        <p className=\"text-grey-300 text-sm leading-[1.15rem] mt-1\">\n          {review.slice(0, stringEnd)} {stringEnd < review.length ? \"...\" : \"\"}{\" \"}\n          {stringEnd < review.length && (\n            <span\n              className=\"font-bold whitespace-nowrap\"\n              onClick={() => setStringEnd(review.length)}\n            >\n              Show More\n            </span>\n          )}\n        </p>\n        <div className=\"flex mt-2 gap-x-3\">\n          <img src={person} alt=\"\" className=\"w-11 h-11 rounded10\" />\n          <div className=\"flex flex-col justify-center\">\n            <h2 className=\"header2 text-sm\">{name}</h2>\n            <span className=\"text-xs text-grey-400\">{occupation}</span>\n          </div>\n          <div className=\"ml-auto self-end text-sm font-semibold\">Patient</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst reviews = [\n  {\n    name: \"Dele Aina\",\n    review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n          maiores recusandae laudantium necessitatibus voluptatem atque delectus\n          culpa quasi quo nemo architecto inventore rem, pariatur nisi omnis\n          labore a iusto undenemo architecto inventore rem, pariatur nisi omnis`,\n    date: \"2021-09-10\",\n    occupation: \"Engineer\",\n  },\n  {\n    name: \"Rev Okoro\",\n    review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n          maiores recusandae laudantium necessitatibus voluptatem atque delectus\n          culpa quasi quo nemo architecto inventore rem, pariatur nisi omnis\n          labore a iusto unde`,\n    date: \"2021-09-10\",\n    occupation: \"Clergy\",\n  },\n  {\n    name: \"Simon Olatunji\",\n    review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n          maiores recusandae laudantium necessitatibus voluptatem atque delectus\n          culpa quasi quo nemo architecto inventore rem, pariatur nisi omnis\n          labore a iusto unde`,\n    date: \"2021-09-10\",\n    occupation: \"Software Developer\",\n  },\n];\n\nconst Reviews = () => {\n  return (\n    <div className=\"flex flex-col gap-y-10 pb-10\">\n      {reviews.map((review) => (\n        <Review key={review.name} {...review} />\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Components\nimport { Button } from \"../components/Button\";\nimport { ProgressA } from \"../components/Progress\";\n\n// Assets\nimport { ReactComponent as UserIcon } from \"../assets/icons/user_outline.svg\";\nimport doctor3 from \"../assets/images/doctor3.png\";\nimport license from \"../assets/images/license.png\";\nimport Reviews from \"../components/Reviews\";\n\nconst DoctorDetail = () => {\n  const navigate = useNavigate();\n\n  const [step, setStep] = React.useState(0);\n  return (\n    <div className=\"relative px-6 pt-8 pb-24 bg-app-bg min-h-screen\">\n      <h1 className=\"header4  text-center\">Doctor's details</h1>\n      <div className=\"mt-11 flex\">\n        <img src={doctor3} alt=\"\" className=\"w-36\" />\n        <div className=\"flex py-2\">\n          <div className=\"ml-5 flex flex-col\">\n            <h2 className=\"header2\">Dr. Abar u Johnson</h2>\n            <span className=\"text-sm text-grey-200 flex-1\">Dentist</span>\n            <div className=\"flex gap-x-2\">\n              <UserIcon />\n              <span className=\"text-sm\">3 visits</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ProgressA\n        step={step}\n        setStep={setStep}\n        options={[\"About me\", \"Reviews\"]}\n      />\n\n      {step === 0 ? (\n        <div className=\"mt-4\">\n          <p className=\"text-grey-300 text-sm leading-[1.15rem]\">\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n            maiores recusandae laudantium necessitatibus voluptatem atque\n            delectus culpa quasi quo nemo architecto inventore rem, pariatur\n            nisi omnis labore a iusto unde,{\" \"}\n            <span className=\"font-bold whitespace-nowrap\">Show More</span>\n          </p>\n          <div className=\"mt-10\">\n            <h2 className=\"header2 text-base\">Languages</h2>\n            <p className=\"text-grey-300 mt-1\">English, Yoruba, French, Igbo</p>\n          </div>\n\n          <div className=\"mt-10\">\n            <h2 className=\"header2 text-base\">License No</h2>\n            <p className=\"mt-1\">\n              <img\n                src={license}\n                alt=\"\"\n                className=\"rounded10 border-2 shadow-sm\"\n              />\n            </p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"mt-4\">\n          <Reviews />\n        </div>\n      )}\n\n      <div className=\"fixed bottom-4 inset-x-4\">\n        <Button\n          className=\"\"\n          onClick={() => navigate(\"/patient-telemedicine-ehr/write-complain\")}\n          title=\"Write complaint\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DoctorDetail;\n"],"names":["ProgressA","_ref2","step","setStep","options","_jsxs","className","twMerge","style","gridTemplateColumns","concat","length","children","_jsx","width","transform","map","option","i","onClick","_ref","Review","name","date","review","occupation","stringEnd","setStringEnd","React","DateView","slice","src","person","alt","reviews","Reviews","DoctorDetail","navigate","useNavigate","doctor3","UserIcon","license","Button","title"],"sourceRoot":""}