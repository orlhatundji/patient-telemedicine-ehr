{"version":3,"file":"static/js/706.f288d98a.chunk.js","mappings":"sKAMA,MA6BA,EA7BkDA,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAE1DE,EAAAA,EAAAA,MAAA,OACEC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,OAAMC,SAAA,EAEXC,EAAAA,EAAAA,KAAA,QAAMC,OAASR,GAAS,OAASS,cAAc,QAAQC,YAAa,IAAKC,EAAE,cAC3EJ,EAAAA,EAAAA,KAAA,QACEC,OAASR,GAAS,OAClBU,YAAa,IACbC,EAAE,mRAEJJ,EAAAA,EAAAA,KAAA,QACEC,OAASR,GAAS,OAClBS,cAAc,QACdC,YAAa,IACbC,EAAE,oFAEJJ,EAAAA,EAAAA,KAAA,QACEC,OAASR,GAAS,OAClBS,cAAc,QACdG,eAAe,QACfF,YAAa,IACbC,EAAE,qBAEA,E,aCvBR,MAqBA,EArB8CZ,IAAe,IAAd,KAAEc,GAAMd,EACrD,OACEE,EAAAA,EAAAA,MAAA,OACEa,WAAWC,EAAAA,EAAAA,IACT,uDACS,UAATF,EAAmB,WAAa,cAChCP,SAAA,EAEFC,EAAAA,EAAAA,KAACS,EAAY,CAAChB,MAAgB,UAATa,EAAmB,UAAY,UACpDN,EAAAA,EAAAA,KAAA,MACEO,WAAWC,EAAAA,EAAAA,IACT,+BACS,UAATF,EAAmB,eAAiB,cACpCP,SACH,0BAGG,C,6DCXH,MAAMW,EAAgClB,IAYtC,IAZuC,MAC5CmB,EAAK,MACLlB,EAAQ,UAAS,UACjBc,EAAY,GAAE,WACdK,EAAa,GAAE,QACfC,EAAO,SACPC,GAAW,EAAK,KAChBR,EAAI,QACJS,EAAO,WACPC,EAAU,WACVC,EAAU,KACVC,GACD1B,EAMC,OACEE,EAAAA,EAAAA,MAAA,UACEyB,IAAKD,EACLZ,KAAMA,GAAQ,SACdc,SAAUN,GAAY,EAAI,EAC1BD,QAASC,EAAW,OAAWD,EAC/BN,WAAWC,EAAAA,EAAAA,IACT,2FAZgC,CACpCa,QAAS,+CACTC,UAAW,0DAWD7B,GACNc,EACAO,EAAW,qBAAuB,GAClCC,EAAU,cAAgB,IAC1BhB,SAAA,CAEDgB,IACCrB,EAAAA,EAAAA,MAAA,OACEa,UAAU,6CACVZ,MAAM,6BACNG,KAAK,OACLyB,QAAQ,YAAWxB,SAAA,EAEnBC,EAAAA,EAAAA,KAAA,UACEO,UAAU,aACViB,GAAG,KACHC,GAAG,KACHC,EAAE,KACFzB,OAAO,eACPE,YAAY,OAEdH,EAAAA,EAAAA,KAAA,QACEO,UAAU,aACVT,KAAK,eACLM,EAAE,uHAIPY,GACDhB,EAAAA,EAAAA,KAAA,QAAMO,WAAWC,EAAAA,EAAAA,IAAQ,UAAWI,GAAYb,SAAEY,IACjDM,IACM,C,qCCzETU,E,iBACJ,SAASC,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAIP,KAAKU,GAAG,CAAG,GAAEC,eAAeC,KAAKF,EAAGV,KAAOM,EAAEN,GAAKU,EAAEV,GAAK,CAAE,OAAOM,CAAG,EAAGJ,EAASW,MAAM,KAAML,UAAY,CAEnR,SAASM,EAAQhD,EAAMiD,GACrB,IAAI,MACF9B,EAAK,QACL+B,KACGC,GACDnD,EACJ,OAAoB,gBAAoB,MAAOoC,EAAS,CACtDhC,MAAO,GACPC,OAAQ,GACR0B,QAAS,YACTzB,KAAM,OACNH,MAAO,6BACPwB,IAAKsB,EACL,kBAAmBC,GAClBC,GAAQhC,EAAqB,gBAAoB,QAAS,CAC3DiC,GAAIF,GACH/B,GAAS,KAAMgB,IAAOA,EAAkB,gBAAoB,IAAK,CAClEiB,GAAI,UACU,gBAAoB,OAAQ,CAC1CA,GAAI,SACJC,SAAU,UACVC,SAAU,UACV1C,EAAG,gkBACHN,KAAM,cAEV,CACA,MAAMiD,EAA0B,aAAiBP,GAClC,I,aCRf,MAEMQ,GAAexC,EAAAA,EAAAA,IACjB,+FACA,0FACA,2BAoDJ,EAjDoChB,IAc7B,IAADyD,EAAA,IAd+B,KACnCC,EAAI,KACJ5C,EAAO,OAAM,aACb6C,EAAY,MACZC,EAAK,YACLC,EAAW,MACXC,EAAK,SACLC,EAAQ,MACRC,EAAK,OACLC,EAAM,SACN3C,EAAQ,UACRP,EAAS,WACTmD,KACGf,GACJnD,EACC,MAAOmE,EAAcC,IAAsBC,EAAAA,EAAAA,UAAkB,aAATvD,GAEpD,OACEZ,EAAAA,EAAAA,MAAA,OAAKa,UAAU,SAAQR,SAAA,CACpBuD,IACCtD,EAAAA,EAAAA,KAAA,SACE8D,QAASZ,EACT3C,WAAWC,EAAAA,EAAAA,IA9BA,+CA8BsBkD,GAAY3D,SAE5CuD,KAGL5D,EAAAA,EAAAA,MAAA,OAAKa,UAAU,6BAA4BR,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SACEM,KAAMqD,EAAe,OAAS,WAC9B7C,SAAUA,EACVqC,aAAcA,EACdC,MAAOA,KACHG,EAASL,EAAM,IAAKM,IACxBjD,WAAWC,EAAAA,EAAAA,IAAQ,SAAUwC,EAAczC,GAC3C8C,YAAaA,KACTV,IAEI,aAATrC,IAAuBN,EAAAA,EAAAA,KAAC+D,EAAQ,CAACxD,UAAU,kCAAkCM,QAASA,IAAM+C,GAAoBI,IAAUA,SAE5HP,GAAUA,EAAOP,KAChBxD,EAAAA,EAAAA,MAAA,QAAMa,UAAU,yBAAwBR,SAAA,CAAC,KACxB,QAAbkD,EAACQ,EAAOP,UAAK,IAAAD,OAAA,EAAZA,EAAcgB,aAGjB,C,+HC/DV,MA6DA,EA7DgCC,KAC9B,MAAM,SACJX,EAAQ,aACRY,EACAC,WAAW,OAAEX,EAAM,QAAEY,KACnBC,EAAAA,EAAAA,IAAkB,CACpBC,KAAM,WACNC,eAAgB,aAEZC,GAAWC,EAAAA,EAAAA,MAEjB,OACEhF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,gBAAeR,SAAA,EAC5BC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,KACXjF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,OAAMR,SAAA,EACnBL,EAAAA,EAAAA,MAAA,OAAKa,UAAU,OAAMR,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIO,UAAU,uBAAsBR,SAAC,oBACrCL,EAAAA,EAAAA,MAAA,KAAGa,UAAU,eAAcR,SAAA,CAAC,2BACD,KACzBC,EAAAA,EAAAA,KAAC4E,EAAAA,GAAI,CAACC,GAAG,SAAStE,UAAU,yBAAwBR,SAAC,iBAMzDC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,OAAMR,UACnBC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK,CACJxB,MAAM,eACNJ,KAAK,WACL5C,KAAK,WACL+C,YAAY,0BACNE,WAAUE,SAChBD,MAAO,CACLuB,UAAU,QAIhB/E,EAAAA,EAAAA,KAAA,OAAKO,UAAU,OAAMR,UACnBC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK,CACJxB,MAAM,uBACNJ,KAAK,WACL5C,KAAK,WACL+C,YAAY,0BACNE,WAAUE,SAChBD,MAAO,CACLuB,UAAU,QAKhB/E,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,MAAM,iBACNlB,MAAM,UACNc,UAAU,QACVM,QAASA,IAAM4D,EAAS,IAADO,OAAKC,EAAAA,EAAQ,kBAGpC,C,gCCrEH,MAAMA,EAAW,0B","sources":["components/HospitalIcon.tsx","components/AuthHeader.tsx","components/Button.tsx","assets/icons/mask.svg","components/Input.tsx","pages/auth/ResetPassword.tsx","utils/constants.tsx"],"sourcesContent":["import * as React from \"react\"\n\ntype HospitalIconProps = {\n  color?: string;\n}\n\nconst HospitalIcon: React.FC<HospitalIconProps> = ({ color }) => (\n\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n  >\n    <path stroke={ color || \"#fff\" } strokeLinecap=\"round\" strokeWidth={1.5} d=\"M22 22H2\" />\n    <path\n      stroke={ color || \"#fff\" }\n      strokeWidth={1.5}\n      d=\"M17 22V6c0-1.886 0-2.828-.586-3.414C15.828 2 14.886 2 13 2h-2c-1.886 0-2.828 0-3.414.586C7 3.172 7 4.114 7 6v16m14 0V8.5c0-1.404 0-2.107-.337-2.611a2 2 0 0 0-.552-.552C19.607 5 18.904 5 17.5 5M3 22V8.5c0-1.404 0-2.107.337-2.611a2 2 0 0 1 .552-.552C4.393 5 5.096 5 6.5 5\"\n    />\n    <path\n      stroke={ color || \"#fff\" }\n      strokeLinecap=\"round\"\n      strokeWidth={1.5}\n      d=\"M12 22v-3m-2-7h4m-8.5-1H7m-1.5 3H7m10-3h1.5M17 14h1.5m-13-6H7m10 0h1.5M10 15h4\"\n    />\n    <path\n      stroke={ color || \"#fff\" }\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M12 9V5m2 2h-4\"\n    />\n  </svg>\n)\nexport default HospitalIcon;\n","import React from \"react\";\n\n// Assets\nimport HospitalIcon from \"./HospitalIcon\";\nimport { twMerge } from \"tailwind-merge\";\n\ntype AuthHeaderProps = {\n  type?: \"white\" | \"primary\";\n};\n\nconst AuthHeader: React.FC<AuthHeaderProps> = ({ type }) => {\n  return (\n    <div\n      className={twMerge(\n        \"h-20 flex items-center justify-center gap-x-2 w-full\",\n        type === \"white\" ? \"bg-white\" : \"bg-primary\"\n      )}\n    >\n      <HospitalIcon color={type === \"white\" ? \"#FA5805\" : \"#fff\"} />\n      <h1\n        className={twMerge(\n          \"header1 font-sans font-black\",\n          type === \"white\" ? \"text-primary\" : \"text-white\"\n        )}\n      >\n        Welcome to Hospital\n      </h1>\n    </div>\n  );\n};\n\nexport default AuthHeader;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  onClick?: () => void;\n  title: string;\n  color?: \"primary\" | \"secondary\";\n  className?: string;\n  titleStyle?: string;\n  loading?: boolean;\n  disabled?: boolean;\n  prefixIcon?: React.ReactNode;\n  suffixIcon?: React.ReactNode;\n  iref?: React.RefObject<HTMLButtonElement>;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  title,\n  color = \"primary\",\n  className = \"\",\n  titleStyle = \"\",\n  onClick,\n  disabled = false,\n  type,\n  loading,\n  prefixIcon,\n  suffixIcon,\n  iref,\n}) => {\n  const theme: Record<string, string> = {\n    primary: \"text-white bg-primary rounded-lg w-full py-4\",\n    secondary: \"text-primary bg-white rounded-lg border border-primary\",\n  };\n\n  return (\n    <button\n      ref={iref}\n      type={type || \"button\"}\n      tabIndex={disabled ? -1 : 0}\n      onClick={disabled ? () => {} : onClick}\n      className={twMerge(\n        \"whitespace-nowrap flex items-center justify-center gap-x-1 min-w-fit h-fit font-semibold\",\n        theme[color],\n        className,\n        disabled ? \"cursor-not-allowed\" : \"\",\n        loading ? \"cursor-wait\" : \"\"\n      )}\n    >\n      {loading && (\n        <svg\n          className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          ></circle>\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          ></path>\n        </svg>\n      )}\n      {prefixIcon}\n      <span className={twMerge(\"header2\", titleStyle)}>{title}</span>\n      {suffixIcon}\n    </button>\n  );\n};\n","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMask(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"filled\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"vector\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0 7.99967C0.933333 4.13301 4.13333 1.33301 8 1.33301C11.8667 1.33301 15.0667 4.13301 16 7.99967C15.0667 11.8663 11.8667 14.6663 8 14.6663C4.13333 14.6663 0.933333 11.8663 0 7.99967ZM4.66667 7.99967C4.66667 9.86634 6.13333 11.333 8 11.333C9.86667 11.333 11.3333 9.86634 11.3333 7.99967C11.3333 6.13301 9.86667 4.66634 8 4.66634C6.13333 4.66634 4.66667 6.13301 4.66667 7.99967ZM9.33333 7.99967C9.33333 8.73605 8.73638 9.33301 8 9.33301C7.26362 9.33301 6.66667 8.73605 6.66667 7.99967C6.66667 7.26329 7.26362 6.66634 8 6.66634C8.73638 6.66634 9.33333 7.26329 9.33333 7.99967Z\",\n    fill: \"#24272A\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMask);\nexport default __webpack_public_path__ + \"static/media/mask.9e28b56654ba158bd57a2ee72623da2c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\n// Assets\nimport { ReactComponent as MaskIcon } from \"../assets/icons/mask.svg\";\n\ninterface InputProps {\n  name: string;\n  type?: \"password\" | \"text\" | \"number\" | \"email\" | \"tel\" | \"url\";\n  defaultValue?: any;\n  value?: any;\n  placeholder?: string;\n  label?: string;\n  register?: any;\n  rules?: any;\n  errors?: any;\n  disabled?: boolean;\n  className?: string;\n  labelStyle?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst labelDefault = \"text-tertiary-100 text-base leading-[1.2rem]\";\n\nconst categoryType = twMerge(\n    \"border border-stroke-100 outline-none bg-white4 placeholder-text-primary placeholder:text-sm\",\n    \"text-base -tracking-[0.4px] font-semibold p-4 leading-5 rounded focus:border-stroke-100\",\n    \"placeholder:font-normal\"\n  );\n\nconst Input: React.FC<InputProps> = ({\n  name,\n  type = \"text\",\n  defaultValue,\n  value,\n  placeholder,\n  label,\n  register,\n  rules,\n  errors,\n  disabled,\n  className,\n  labelStyle,\n  ...props\n}) => {\n  const [showPassword, setSetShowPassword] = useState(type === \"password\" ? false : true)\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label\n          htmlFor={name}\n          className={twMerge(labelDefault, labelStyle)}\n        >\n          {label}\n        </label>\n      )}\n      <div className=\"relative flex items-center\">\n        <input\n          type={showPassword ? \"text\" : \"password\"}\n          disabled={disabled}\n          defaultValue={defaultValue}\n          value={value}\n          {...register(name, { ...rules })}\n          className={twMerge(\"w-full\", categoryType, className)}\n          placeholder={placeholder}\n          {...props}\n        />\n        {type === \"password\" && <MaskIcon className=\"absolute right-4 cursor-pointer\" onClick={() => setSetShowPassword((prev) => !prev)} />}\n      </div>\n      {errors && errors[name] && (\n        <span className=\"text-red-alert text-sm\">\n          * {errors[name]?.message}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n\nexport const TextArea: React.FC<InputProps> = ({\n  name,\n  defaultValue,\n  placeholder,\n  label,\n  register,\n  rules,\n  errors,\n  disabled,\n  className,\n  labelStyle = \"\",\n}) => {\n  const categoryType = twMerge(\n      \"border border-stroke outline-none bg-white4 placeholder-placeholder text-body-black\",\n      \"text-base -tracking-[0.4px] font-semibold p-4 leading-5 rounded focus:border-desc-grey w-full\",\n      className\n    )\n  \n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label\n          htmlFor={name}\n          className={twMerge(\n            labelStyle\n          )}\n        >\n          {label}\n        </label>\n      )}\n      <textarea\n        disabled={disabled}\n        defaultValue={defaultValue}\n        {...register(name, { ...rules })}\n        className={twMerge(categoryType)}\n        placeholder={placeholder}\n      />\n      {errors && errors[name] && (\n        <span className=\"text-red-alert text-sm\">\n          * {errors[name]?.message}\n        </span>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\n// Constants\nimport { base_url } from \"../../utils/constants\";\n\n// Components\nimport AuthHeader from \"../../components/AuthHeader\";\nimport { Button } from \"../../components/Button\";\nimport Input from \"../../components/Input\";\n\nconst ResetPassword: React.FC = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<FormData>({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n  });\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"flex flex-col\">\n      <AuthHeader />\n      <div className=\"px-6\">\n        <div className=\"mb-6\">\n          <h1 className=\"header3 mt-12 w-full\">Reset Password</h1>\n          <p className=\"text-sm mt-1\">\n            Already have an account?{\" \"}\n            <Link to=\"/login\" className=\"font-bold text-primary\">\n              Login\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"mt-4\">\n          <Input\n            label=\"New password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter a secure password\"\n            {...{ register, errors }}\n            rules={{\n              required: true,\n            }}\n          />\n        </div>\n        <div className=\"mt-4\">\n          <Input\n            label=\"Confirm new password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter a secure password\"\n            {...{ register, errors }}\n            rules={{\n              required: true,\n            }}\n          />\n        </div>\n\n        <Button\n          title=\"Reset password\"\n          color=\"primary\"\n          className=\"mt-10\"\n          onClick={() => navigate(`/${base_url}/login`)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","export const base_url = \"patient-telemedicine-ehr\""],"names":["_ref","color","_jsxs","xmlns","width","height","fill","children","_jsx","stroke","strokeLinecap","strokeWidth","d","strokeLinejoin","type","className","twMerge","HospitalIcon","Button","title","titleStyle","onClick","disabled","loading","prefixIcon","suffixIcon","iref","ref","tabIndex","primary","secondary","viewBox","cx","cy","r","_g","_extends","Object","assign","bind","n","e","arguments","length","t","hasOwnProperty","call","apply","SvgMask","svgRef","titleId","props","id","fillRule","clipRule","ForwardRef","categoryType","_errors$name","name","defaultValue","value","placeholder","label","register","rules","errors","labelStyle","showPassword","setSetShowPassword","useState","htmlFor","MaskIcon","prev","message","ResetPassword","handleSubmit","formState","isValid","useForm","mode","reValidateMode","navigate","useNavigate","AuthHeader","Link","to","Input","required","concat","base_url"],"sourceRoot":""}